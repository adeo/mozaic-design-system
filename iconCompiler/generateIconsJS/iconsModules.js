const { parse } = require('svg-parser')
const { createComponentName, convertPxToRem } = require('../utils/tools')

const fileHeader = `/*
DON'T EDIT THIS FILE
It was auto-generated by "iconCompiler" script
*/`

function mapTagObject(arr) {
  return `[${arr.map((elem) => `{${createTagObject(elem)}}`)}]`
}

function createTagObject(obj) {
  let objString = ''
  const tagObj = {}
  const tagName = obj.tagName
  const properties = obj.properties
  const hasProperties = Object.keys(properties).length !== 0
  const children = obj.children
  const hasChildren = children.length !== 0

  if (tagName) tagObj.tagName = tagName

  if (hasProperties) tagObj.attrs = JSON.stringify(properties)

  if (hasChildren) tagObj.children = mapTagObject(children)

  for (const key in tagObj) {
    const value = tagObj[key]
    objString += key === 'tagName' ? `${key}: "${value}",` : `${key}: ${value},`
  }

  objString = objString.substring(0, objString.length - 1)

  return objString
}

const iconModule = ({ fileName, data }) => {
  const parsedFileName = createComponentName(fileName)
  const sizePx = fileName.replace('.svg', '').split('_').pop()
  const size = convertPxToRem(sizePx.replace('px', ''))
  const parsedSVG = parse(data).children[0]
  const viewBox = parsedSVG.properties.viewBox
  const content = parsedSVG.children

  if (!size || !content || content.length === 0) {
    console.error(
      `âœ— ERROR : there was a problem building ${fileName} for vueJS`
    )

    return null
  }

  return `export const ${parsedFileName} = {
    viewBox: "${viewBox}",
    size: "${size}",
    paths: ${mapTagObject(content)}
  };`
}

const iconsModules = (iconList) => `${fileHeader}

${iconList.map(iconModule).join('\n')}`

module.exports = iconsModules
