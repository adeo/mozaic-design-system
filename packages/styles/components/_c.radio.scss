/* mqp:start */

/* stylelint-disable no-descending-specificity */
.mc-radio {
  $parent: get-parent-selector(&);

  align-items: center;
  display: flex;

  &__label {
    @include set-font-scale("05", "s");

    cursor: pointer;
    margin-left: magic-unit-rem(0.5, true);
  }

  &__input {
    @include reset-input;

    border: $radio-border-width solid $color-input-border;
    min-width: $radio-min-width;
    width: $radio-width;
    min-height: $radio-min-height;
    height: $radio-height;
    border-radius: 50%;
    background-color: $color-input-background;
    position: relative;
    transition: all 200ms ease;
    cursor: pointer;

    &::before {
      border-radius: 50%;
      content: "";
      display: block;
      height: px-to-rem(6);
      left: 50%;
      min-height: 6px;
      min-width: 6px;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      width: px-to-rem(6);
    }

    &::-ms-check {
      background-color: $color-input-background;
      border: $radio-border-width solid $color-input-border;
      color: $color-input-background;
    }

    &:hover {
      @include add-demo-state-class {
        border-color: $color-input-hover-border;

        &::-ms-check {
          border-color: $color-input-hover-border;
        }
      }
    }

    &:focus {
      @include add-demo-state-class {
        @include set-shadow-focus();

        &::-ms-check {
          @include set-shadow-focus();
        }
      }
    }

    &:checked {
      background-color: $color-input-checked-background;
      border-color: $color-input-checked-border;

      &::-ms-check {
        border-color: $color-input-checked-border;
        background-color: $color-input-checked-background;
      }

      &::before {
        background-color: $color-input-background;
      }

      &:hover {
        border-color: $color-input-checked-hover-border;

        &::-ms-check {
          border-color: $color-input-checked-hover-border;
        }
      }
    }

    &:disabled {
      background-color: $color-input-disabled-background;
      border-color: $color-input-disabled-background;
      cursor: not-allowed;

      &::-ms-check {
        background-color: $color-input-disabled-background;
        border-color: $color-input-disabled-background;
        cursor: not-allowed;
      }

      & + #{$parent}__label {
        color: $color-input-disabled-label;
      }

      // disabled & checked
      &:checked {
        &::before {
          background-color: $color-input-disabled-icon;
        }
      }
    }

    &.is-invalid {
      border-color: $color-input-invalid-border;

      &::-ms-check {
        border-color: $color-input-invalid-border;
      }

      &:hover {
        @include add-demo-state-class {
          border-color: $color-input-invalid-hover-border;

          &::-ms-check {
            border-color: $color-input-invalid-hover-border;
          }
        }
      }
    }
  }
}
/* stylelint-enable */

/* mqp:end */
