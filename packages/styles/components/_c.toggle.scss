/* mqp:start */
.mc-toggle {
  $parent: get-parent-selector(&);
  $label: #{$parent}__label;

  display: block;
  position: relative;

  &__input {
    @include visually-hidden();

    // focus
    &:focus {
      & + #{$parent}__label::before {
        @include set-shadow-focus();
      }
    }

    // checked
    &:checked {
      & + #{$parent}__label {
        &::before {
          background-color: $color-toggle-on-background;
        }

        &::after {
          border-color: $color-toggle-on-background;
          background-image: url(
            inline-icons(
              "notification-available-16",
              $color-toggle-on-background
            ));
          transform: translate(100%, -50%);
        }

        #{$parent}__off {
          @include set-hidden-input();
        }
      }
    }

    &:not(:checked) {
      & + #{$parent}__label {
        #{$parent}__on {
          @include set-hidden-input();
        }
      }
    }

    // disabled
    &:disabled {
      & + #{$parent}__label {
        color: $color-toggle-disabled-label;
        cursor: not-allowed;

        &::before {
          background-color: $color-toggle-disabled-background;
          // cursor: not-allowed;
        }

        &::after {
          border-color: $color-toggle-disabled-background;
          background-color: $color-toggle-disabled-circle;
          background-image: url(
            inline-icons(
              "control-cross-16",
              $color-toggle-disabled-background
            ));
          // cursor: not-allowed;
        }
      }

      &:checked {
        & + #{$parent}__label {
          &::before {
            background-color: $color-toggle-disabled-checked-background;
            // cursor: not-allowed;
          }

          &::after {
            border-color: $color-toggle-disabled-checked-background;
            background-color: $color-toggle-disabled-checked-circle;
            background-image: url(
              inline-icons(
                "notification-available-16",
                $color-toggle-disabled-checked-background
              ));
            background-size: $mu100;
            // cursor: not-allowed;
          }
        }
      }
    }

    &:not(:disabled) {
      & + #{$parent}__label:hover::after {
        background-color: $color-toggle-hover-circle;
      }
    }
  }

  &__content {
    display: inline-block;
    padding-left: $mu075;
  }

  &__label {
    @include set-font-scale("05", "s");
    @include set-toggle-size("m");

    box-sizing: border-box;
    cursor: pointer;
    color: $color-toggle-label;
    display: table-cell;
    position: relative;
    vertical-align: middle;
    user-select: none;

    &::after,
    &::before {
      box-sizing: border-box;
      content: "";
      display: block;
      left: 0;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }

    // the switch background
    &::before {
      background-color: $color-toggle-off-background;
      will-change: background-color, border-color, box-shadow;
      transition: background-color 100ms ease,
        border-color 100ms ease,
        box-shadow 200ms ease;
    }

    // the switch pill foreground
    &::after {
      background: $color-toggle-off-circle
        url(inline-icons("control-cross-16", $color-toggle-off-background))
        no-repeat center;
      background-size: $mu100;
      border: solid get-border("l") $color-toggle-off-background;
      will-change: transform;
      transition: transform 100ms ease, border-color 100ms ease;
    }
  }

  @include mod-toggle-sizes();

  &--hide-label {
    #{$parent}__content {
      @include set-hidden-input();
    }
  }
}

/* mqp:end */
