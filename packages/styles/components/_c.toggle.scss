/* mqp:start */
.mc-toggle {
  $parent: get-parent-selector(&);

  display: block;
  position: relative;

  &__input {
    @include visually-hidden();
  }

  &__content {
    display: inline-block;
    padding-left: $mu075;
  }

  &__label {
    @include set-font-scale("05", "s");
    @include set-toggle-size("m");

    box-sizing: border-box;
    cursor: pointer;
    color: $color-toggle-label;
    display: table-cell;
    position: relative;
    vertical-align: middle;
    user-select: none;

    :disabled + & {
      color: $color-toggle-disabled-label;
      cursor: not-allowed;
    }

    &::after,
    &::before {
      box-sizing: border-box;
      content: "";
      display: block;
      left: 0;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }

    // the switch background
    &::before {
      background-color: $color-toggle-off-background;
      will-change: background-color, border-color, box-shadow;
      transition:
        background-color 100ms ease,
        border-color 100ms ease,
        box-shadow 200ms ease;

      :checked + & {
        background-color: $color-toggle-on-background;
      }

      :focus + & {
        @include set-shadow-focus();
      }

      :disabled + & {
        background-color: $color-toggle-disabled-background;
        cursor: not-allowed;
      }

      :disabled:checked + & {
        background-color: $color-toggle-disabled-checked-background;
        cursor: not-allowed;
      }
    }

    // the switch pill foreground
    &::after {
      background-color: $color-toggle-off-circle;
      background-image: url("#{inline-icons('control-cross-16', $color-toggle-off-background)}");
      background-repeat: no-repeat;
      background-position: center;
      border: solid get-border("l") $color-toggle-off-background;
      will-change: transform;
      transition: transform 100ms ease, border-color 100ms ease;

      :checked + & {
        border-color: $color-toggle-on-background;
        background-image: url("#{inline-icons('notification-available-16', $color-toggle-on-background)}");
        transform: translate(100%, -50%);
      }

      :disabled + & {
        border-color: $color-toggle-disabled-background;
        background-color: $color-toggle-disabled-circle;
        background-image: url("#{inline-icons('control-cross-16', $color-toggle-disabled-background)}");
        cursor: not-allowed;
      }

      :disabled:checked + & {
        border-color: $color-toggle-disabled-checked-background;
        background-color: $color-toggle-disabled-checked-circle;
        background-image: url("#{inline-icons('notification-available-16', $color-toggle-disabled-checked-background)}");
        cursor: not-allowed;
      }
    }

    :not(:disabled) + &:hover::after {
      background-color: $color-toggle-hover-circle;
    }
  }

  :not(:checked) + &__label &__on,
  :checked + &__label &__off {
    @include set-hidden-input();
  }

  @include mod-toggle-sizes();

  &--hide-label {
    #{$parent}__content {
      @include set-hidden-input();
    }
  }
}

/* mqp:end */
