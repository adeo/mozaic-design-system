.mc-text-input {
  $border-width: get-border('s');

  @include reset-input;
  @include set-font-scale('05');

  display: block;
  width: 100%;
  position: relative;
  border: get-border('s') solid $color-input-border;
  color: $color-input-text;
  background-color: $color-input-background;
  border-radius: get-border-radius('m');

  // remove border height and center baseline optically
  padding:
    calc(#{$mu075} - 0.125em - #{$border-width}) $mu075
    calc(#{$mu075} + 0.125em - #{$border-width});

  &::placeholder {
    @include set-font-scale('05');

    margin: 0;
    padding: 0;
    color: $color-input-placeholder;
    opacity: 1;
  }

  &.is-valid,
  &.is-invalid {
    background-repeat: no-repeat;
    background-size: $mu150 $mu150;
    background-position: right $mu050 center;
    padding-right: $mu300;
  }

  &.is-valid {
    border-color: $color-input-valid-border;
    background-image:
      url(
        inline-icons(
          'circle-check-24',
          $color-input-valid-border
        ));

    &:hover:not(:focus),
    &.is-hover:not(:focus) {
      border-color: $color-input-valid-hover-border;
    }
  }

  &.is-invalid {
    border-color: $color-input-invalid-border;
    background-image:
      url(
        inline-icons(
          'circle-error-24',
          $color-input-invalid-border
        ));

    &:hover:not(:focus),
    &.is-hover:not(:focus) {
      border-color: $color-input-invalid-hover-border;
    }
  }

  &:hover,
  &.is-hover {
    border-color: $color-input-hover-border;
  }

  &:focus,
  &.is-focus {
    border-color: $color-input-focus-border;
  }

  &:disabled {
    border-color: $color-input-disabled-border;
    background: $color-input-disabled-background;
  }
}
