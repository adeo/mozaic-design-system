.mc-autocomplete {
  $parent: get-parent-selector(&);

  align-self: start;
  position: relative;
  min-width: $autocomplete-min-width;
  max-width: var(--autocomplete-width, $autocomplete-width);
  width: 100%;

  &__tag,
  &__loader,
  &__clear {
    position: absolute;
  }

  &__tag,
  &__clear {
    top: 50%;
    transform: translateY(-50%);
    z-index: $autocomplete-tag-zindex;
  }

  &__tag {
    left: $mu300 - $mu025;
  }

  &__clear {
    @include unstyle-button();
    @include set-common-focus();

    background: none;
    border-radius: 50%;
    right: $mu075;

    &,
    &-icon {
      height: $mu150;
      width: $mu150;
    }

    &-icon {
      fill: $color-grey-600;
    }

    &-text {
      @include visually-hidden();
    }

    // invalid state
    .is-invalid + & {
      right: $mu250;
    }
  }

  &__loader {
    right: $mu075;
    top: $mu075;
    z-index: $autocomplete-loader-zindex;
  }

  &__trigger {
    overflow: hidden;

    text-overflow: ellipsis;
    white-space: nowrap;
  }

  &--multi {
    #{$parent} {
      &__trigger {
        padding-left: calc(2.9375rem + var(--autocomplete-tag-width, 0px));
      }
    }
  }

  &--clearable {
    #{$parent} {
      &__trigger {
        padding-right: px-to-rem(44);

        &.is-invalid {
          padding-right: px-to-rem(72);
        }
      }
    }
  }
}
