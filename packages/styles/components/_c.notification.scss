/* mqp:start */
.mc-notification {
  $parent: &;

  @include set-font-face();
  @include set-border-radius();
  @include set-flexy();
  @include set-notification-size($notification-default-size);
  @include set-notification-type('information');

  box-sizing: border-box;
  color: $color-font-darkest;

  &::before {
    background-color: transparent;
    background-repeat: no-repeat;
    content: '';
    display: block;
  }

  &__content {
    flex: 1 1 0;
  }

  &__title,
  &__message {
    margin-bottom: 0;
    margin-top: 0;
  }

  &__title {
    @include set-font-face('semi-bold');
    @include set-font-scale('05');
  }

  &__message {
    @include set-font-scale('04');
  }

  &__link {
    @include set-font-scale('04', 'm');

    margin-top: $mu050;
  }

  // Notification type
  @each $type, $props in $notification-types {
    &--#{$type} {
      @include set-notification-type($type);
    }
  }

  // Notification size
  @each $size, $props in $notification-sizes {
    &--#{$size} {
      @if ($size != 'm') {
        @include set-notification-size($props);

        @each $type, $props in $notification-types {
          @if ($type != 'information') {
            &#{$parent}--#{$type} {
              @include set-notification-type($type, $size);
            }
          }

          @else {
            @include set-notification-type('information', $size);
          }
        }
      }
    }
  }
}

.mc-notification-closable {
  &__close {
    flex: 0 1 auto;
    border: 0;
    outline: 0;
    cursor: pointer;
    width: $mu150;
    height: $mu150;
    display: block;
    right: 0.625rem;
    top: 0.625rem;
    padding: 0;
    background:
      transparent
      url(inline-icons('cross-16', $notification-close-icon-color)) no-repeat;
    transform: translateX($mu050) translateY(-$mu100);
  }
}

/* mqp:end */
