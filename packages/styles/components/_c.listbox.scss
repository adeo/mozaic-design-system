.mc-listbox {
  $parent: get-parent-selector(&);
  $selector-empty: #{$parent}__tile--empty;

  background-color: $color-listbox-background;
  border: get-border("s") solid $color-listbox-border;
  border-radius: get-border-radius("m") - 1;
  overflow-y: auto;
  max-width: var(--listbox-maxwidth, $listbox-max-width);
  width: var(--listbox-width, $listbox-width);

  &::-webkit-scrollbar {
    background-color: $color-grey-100;
    width: $mu025;

    &-thumb {
      background: $color-grey-600;
    }
  }

  &__list {
    @include unstyle-list() {
      margin: {
        top: 0;
        right: 0;
        bottom: 0;
      }
    }
  }

  &__tile {
    align-items: center;
    display: flex;
    gap: $mu050;
    justify-content: flex-start;
    padding-left: $mu075;
    padding-right: $mu075;
    position: relative;

    &:not(#{$selector-empty}):not(.is-disabled):hover,
    &:has(.mc-listbox__input:focus),
    &:has(.mc-listbox__label:focus) {
      background-color: $color-listbox-tile-hover-background;
      box-shadow: inset 9px 0 0 -7px $color-listbox-tile-shadow;
    }

    // modifier – danger
    &--danger,
    &.is-danger {
      color: $color-danger-600;
    }

    // modifier – empty
    &--empty {
      color: $color-grey-600;
      justify-content: center;

      #{$parent}__label {
        cursor: default;
      }
    }

    // state – disabled
    &.is-disabled {
      box-shadow: none;
      background-color: $color-listbox-disabled-background;
      color: $color-font-light;
      pointer-events: none;
    }
  }

  &__flag {
    @include set-font-scale("07", "m");

    text-align: center;
  }

  &__icon {
    fill: $color-grey-600;

    .is-danger & {
      fill: $color-danger-600;
    }
  }

  &__label {
    @include set-font-scale("05", "m");

    color: currentColor;
    cursor: pointer;
    white-space: nowrap;
    outline: transparent;

    @at-root button#{&} {
      background: none;
      border: none;
      padding: 0;
      font-size: inherit;
      font-family: inherit;
    }

    &::after {
      content: "";
      position: absolute;
      inset: 0;
      z-index: var(--listbox-label-z-index, 2);
    }
  }

  &__input {
    margin-left: auto;
    order: 1;
  }

  &--left {
    right: 0;
  }

  // Type "Option"
  &:not(.mc-listbox--multi) {
    #{$parent}__input {
      @include visually-hidden();
    }
  }

  &--options {
    max-height: px-to-rem(221);
    min-width: var(--listbox-minwidth, 6rem);

    #{$parent} {
      &__flag,
      &__icon,
      &__logo {
        height: $mu200;
        width: $mu200;
      }

      &__tile {
        height: $mu300;

        &:not(:last-child) {
          border-bottom: get-border("s") solid $color-listbox-tile-border;
        }

        &.is-selected {
          @include listbox-selected-visibility($parent);
        }

        &.is-selected.is-disabled {
          @include listbox-selected-disabled($parent);
        }
      }

      &__input {
        &:checked + {
          @include listbox-selected-visibility($parent);
        }

        &:checked:disabled + {
          @include listbox-selected-disabled($parent);
        }
      }

      &__label {
        &::before {
          background-image: url("#{inline-icons('notification-available-24', $color-grey-900)}");
          background-position: center;
          background-repeat: no-repeat;
          background-size: $mu150;
          content: "";
          height: $mu150;
          position: absolute;
          right: $mu075;
          top: 0;
          transform: translateY(50%);
          width: $mu150;
          visibility: hidden;
        }
      }
    }
  }

  // Type "Actions"
  &--actions {
    min-width: px-to-rem(278);

    &.align-top {
      transform: translate(0, calc(-100% - #{$mu150}));
    }

    &.align-right {
      transform: translate(calc(-100% + #{$mu150}), 0);

      &.align-top {
        transform: translate(calc(-100% + #{$mu150}), calc(-100% - #{$mu150}));
      }
    }

    #{$parent} {
      &__list {
        &:not(:last-child) {
          border-bottom: get-border("s") solid $color-grey-300;
        }

        &:first-child {
          padding: {
            top: px-to-rem(7);
            bottom: $mu050;
          }
        }

        &:last-child {
          padding: {
            top: $mu050;
            bottom: px-to-rem(7);
          }
        }

        &:not(:first-child):not(:last-child) {
          padding: {
            top: $mu050;
            bottom: $mu050;
          }
        }
      }

      &__tile {
        height: $mu250;
      }

      &__flag,
      &__icon,
      &__logo {
        height: $mu150;
        width: $mu150;
      }
    }
  }

  // Type "Overlay"
  &--overlay {
    position: absolute;
    z-index: var(--listbox-overlay-z-index, 10);
  }
}
