$buttons: get-token(color, button);

$button-sizes: (
  's': (
    'font-size': '04',
    'line-height': 'xs',
    'padding-v': $mu025,
    'padding-h': $mu100,
    'min-height': $mu200,
  ),
  'm': (
    'font-size': '05',
    'line-height': 'xs',
    'padding-v': $mu025,
    'padding-h': $mu200,
    'min-height': $mu300,
  ),
  'l': (
    'font-size': '06',
    'line-height': 'xs',
    'padding-v': $mu025,
    'padding-h': $mu200,
    'min-height': $mu350,
  ),
);

$icons: (
  's': (
    'width': $mu100,
    'height': $mu100,
  ),
  'm': (
    'width': $mu150,
    'height': $mu150,
  ),
  'l': (
    'width': $mu200,
    'height': $mu200,
  ),
  'xl': (
    'width': $mu250,
    'height': $mu250,
  ),
);

$button-medium: map-get($button-sizes, 'm');
$button-radius: get-border-radius('m');
$button-border: get-border('m');

@mixin set-button-size($sizeProps) {
  @include set-font-scale(
    map-get($sizeProps, 'font-size'),
    map-get($sizeProps, 'line-height')
  );

  padding: map-get($sizeProps, 'padding-v') map-get($sizeProps, 'padding-h');
  min-height: map-get($sizeProps, 'min-height');
  min-width: map-get($sizeProps, 'min-height');

  /* ie11 hack to center vertically */

  /* see : https://github.com/philipwalton/flexbugs/issues/231 */
  height: 0;
}

@mixin mod-button-sizes() {
  @each $sizeName, $sizeProps in $button-sizes {
    &--#{$sizeName} {
      @include modify-from-screens($major-screens) {
        @include set-button-size($sizeProps);
      }
    }
  }
}

@mixin set-button-theme($props) {
  color: map-get($props, 'font');
  fill: currentColor;

  @if map-has-key($props, 'border') {
    border: $button-border solid map-get($props, 'border');
  }

  @if map-has-key($props, 'background') {
    background-color: map-get($props, 'background');
  }

  @else {
    background-color: transparent;
  }

  @if map-has-key($props, 'hover') {
    $hover-props: map-get($props, 'hover');

    @each $prop, $value in $hover-props {
      &:hover,
      &.is-hover {
        @if map-has-key($hover-props, 'background') {
          background-color: map-get($hover-props, 'background');
        }

        @if map-has-key($hover-props, 'font') {
          color: map-get($hover-props, 'font');
        }

        @else {
          color: map-get($props, 'font');
        }
      }
    }
  }

  @if map-has-key($props, 'focus') {
    $focus-props: map-get($props, 'focus');

    @each $prop, $value in $focus-props {
      &:focus,
      &.is-focus {
        border-color: map-get($focus-props, 'border');
      }
    }
  }

  @if map-has-key($props, 'active') {
    $active-props: map-get($props, 'active');

    @each $prop, $value in $active-props {
      &:active,
      &.is-active {
        background-color: map-get($active-props, 'background');
      }
    }
  }

  @if map-has-key($props, 'disabled') {
    $disabled-props: map-get($props, 'disabled');

    &:disabled,
    &.is-disabled {
      border-color: transparent;
      background-color: map-get($disabled-props, 'background');
      color: map-get($disabled-props, 'font');
      cursor: default;
    }
  }
}

@mixin set-button-layout {
  cursor: pointer;
  border-radius: $button-radius;
  text-align: center;
  border: $button-border solid transparent;
  transition: all ease 200ms;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
}
